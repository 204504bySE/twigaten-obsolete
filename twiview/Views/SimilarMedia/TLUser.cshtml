@using twiview.Locale;
@using twiview.Models;
@model twiview.Models.SimilarMediaModel

@helper RenderScripts()
{
    @Styles.Render("~/Content/bootstrap-datepicker")
    @ScriptHelper.datetimepickerScript(Model.Date, Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id }) + @"?Date=")
}

@helper Pager(bool datepicker = false)
{
    <nav>
        <ul class="pagination">
            <li @(Model.isLatest ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id })">@Locale.Pager_Latest</a></li>
            @if (Model.NextNew == null || Model.isLatest)
            {
            <li class="disabled"><a>@Locale.Pager_Newer</a></li> }
            else
            {
            <li><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, After=Model.NextNew })">@Locale.Pager_Newer</a></li> }
            @if (Model.NextOld == null)
            {
            <li class="disabled"><a>@Locale.Pager_Older</a></li> }
            else
            {
            <li><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Before = Model.NextOld })">@Locale.Pager_Older</a></li> }
        </ul>
        <div style="display:inline-block"><span style="vertical-align:super"><span class="glyphicon glyphicon-retweet" style="color:#19cf86"></span> RT</span>
            <ul class="pagination">
                @switch (Model.RangeMode)
                {
                    case SimilarMediaModel.RangeModes.Before:
                        <li @(Model.GetRetweet ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Before = Model.LastTweet, RT = true })">@Locale.Pager_Show</a></li>
                        <li @(!Model.GetRetweet ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Before = Model.LastTweet, RT = false })">@Locale.Pager_Hide</a></li>
                        break;
                    case SimilarMediaModel.RangeModes.After:
                        <li @(Model.GetRetweet ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, After = Model.LastTweet, RT = true })">@Locale.Pager_Show</a></li>
                        <li @(!Model.GetRetweet ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, After = Model.LastTweet, RT = false })">@Locale.Pager_Hide</a></li>
                        break;
                    default:
                        <li @(Model.GetRetweet ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Date = Model.Date.ToString("yyyy/MM/dd HH:mm:ss"), RT = true })">@Locale.Pager_Show</a></li>
                        <li @(!Model.GetRetweet ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Date = Model.Date.ToString("yyyy/MM/dd HH:mm:ss"), RT = false })">@Locale.Pager_Hide</a></li>
                        break;
                }
            </ul>
        </div>
        <div style="display:inline-block"><span style="vertical-align:super">@Locale.SimilarMedia_ShowNoDup</span>
            <ul class="pagination">
                @switch (Model.RangeMode)
                {
                    case SimilarMediaModel.RangeModes.Before:
                        <li @(Model.ShowNoDup ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Before = Model.LastTweet, Show0 = true })">@Locale.Pager_Show</a></li>
                        <li @(!Model.ShowNoDup ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Before = Model.LastTweet, Show0 = false })">@Locale.Pager_Hide</a></li>
                        break;
                    case SimilarMediaModel.RangeModes.After:
                        <li @(Model.ShowNoDup ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, After = Model.LastTweet, Show0 = true })">@Locale.Pager_Show</a></li>
                        <li @(!Model.ShowNoDup ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, After = Model.LastTweet, Show0 = false })">@Locale.Pager_Hide</a></li>
                        break;
                    default:
                        <li @(Model.ShowNoDup ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Date = Model.Date.ToString("yyyy/MM/dd HH:mm:ss"), Show0 = true })">@Locale.Pager_Show</a></li>
                        <li @(!Model.ShowNoDup ? "class=active" : "")><a href="@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Date = Model.Date.ToString("yyyy/MM/dd HH:mm:ss"), Show0 = false })">@Locale.Pager_Hide</a></li>
                        break;
                }
            </ul>
        </div>
    </nav>
if (datepicker)
{
        <nav class="form-group">
            <form method="get" class="form-inline" style="display:inline">
                @Locale.Pager_ResultsPerPage
                <select class="form-control" name="Count" onchange="this.form.submit()">
                    <option value="10" @(Model.TweetCount == 10 ? "selected" : "")>10</option>
                    <option value="20" @(Model.TweetCount == 20 ? "selected" : "")>20</option>
                    <option value="50" @(Model.TweetCount == 50 ? "selected" : "")>50</option>
                </select>
                @switch (Model.RangeMode)
                {
                    case SimilarMediaModel.RangeModes.Before:
                        <input type="hidden" name="Before" value="@Model.LastTweet" />
                        break;
                    case SimilarMediaModel.RangeModes.After:
                        <input type="hidden" name="After" value="@Model.LastTweet" />
                        break;
                    default:
                        <input type="hidden" name="Date" value="@Model.Date.ToString("yyyy/MM/dd HH:mm:ss")" />
                        break;
                }
            </form>
            <form method="get" class="form-inline" style="display:inline">
                @Locale.Pager_Datetimepicker
                <div class='input-group date' id='datetimepicker_similarmedia'>
                    <input name="Date" type='text' class="form-control" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <button type="submit" class="btn btn-primary">Go</button>
            </form>
        </nav>
}
}

@{
    if (Model.TargetUser != null)
    {
        string datestr;
        if (Model.isLatest) { datestr = ""; }
        else
        {
            switch (Model.RangeMode)
            {
                case SimilarMediaModel.RangeModes.Before:
                case SimilarMediaModel.RangeModes.Date:
                    datestr = "(~" + Model.Date.ToLocalTime().ToString("yyyy/MM/dd HH:mm:ss") + ")"; break;
                case SimilarMediaModel.RangeModes.After:
                    datestr = "(" + Model.Date.ToLocalTime().ToString("yyyy/MM/dd HH:mm:ss") + "~)"; break;
                default:
                    datestr = ""; break;
            }
        }
        string TitleFormat;
        switch (Model.ActionName)
        {
            case SimilarMediaModel.ActionNames.Timeline:
                TitleFormat = Locale.Title_Timeline; break;
            case SimilarMediaModel.ActionNames.UserTweet:
                TitleFormat = Locale.Title_UserTweet; break;
            default:
                TitleFormat = Model.ActionName.ToString(); break;    //エラーの代わり
        }
        ViewBag.Title = string.Format(TitleFormat, Model.TargetUser.screen_name, datestr);
    }
    else
    {
        ViewBag.Title = Locale.Title_UserNotFound;
    }

    @section TwitterCard{@TextHelper.TwitterCardDefault()}

    if (Model.TargetUser != null)
    {
        @Pager(true);
        string TitleFormat;
        switch (Model.ActionName)
        {
            case SimilarMediaModel.ActionNames.Timeline:
                TitleFormat = Locale.Headline_Timeline; break;
            case SimilarMediaModel.ActionNames.UserTweet:
                TitleFormat = Locale.Headline_UserTweet; break;
            default:
                TitleFormat = Model.ActionName.ToString(); break;    //エラーの代わり
        }
        <h2>@string.Format(TitleFormat, Model.TargetUser.screen_name)</h2>
        switch (Model.RangeMode)
        {
            case SimilarMediaModel.RangeModes.Before:
            case SimilarMediaModel.RangeModes.Date:
            <h3>(~@Model.Date.ToLocalTime().ToString("yyyy/MM/dd HH:mm:ss"))</h3>
                break;
            case SimilarMediaModel.RangeModes.After:
            <h3>(@Model.Date.ToLocalTime().ToString("yyyy/MM/dd HH:mm:ss")~)</h3>
                break;
            default:
                break;
        }
        <p>
            @switch (Model.RangeMode)
            {
                case SimilarMediaModel.RangeModes.Before:
                    @ScriptHelper.TweetButton(@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Before = Model.LastTweet }))
                    break;
                case SimilarMediaModel.RangeModes.After:
                    @ScriptHelper.TweetButton(@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, After = Model.LastTweet }))
                    break;
                default:
                    @ScriptHelper.TweetButton(@Url.Action(Model.ActionName.ToString(), new { UserID = Model.TargetUser.user_id, Date = Model.Date.ToString("yyyy/MM/dd HH:mm:ss") }))
                    break;
            }
        </p>
    }
    else
    {
        <h2>@Locale.Headline_UserNotFound</h2>
    }
    <p>@(Locale.Headline_TimeToSearch): @(Model.QueryElapsedMilliseconds)ms</p>
    if (Model.Tweets.Length > 0)
    {
        @SimilarMediaHelper.SimilarMediaAll(Model.Tweets, Model.SimilarLimit, true)
        @Pager();
    }
    else
    {
        @SimilarMediaHelper.NoTweetToShow()
    }

    if (Model.TargetUser != null){ @RenderScripts() }
}

