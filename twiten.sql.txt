create database twiten character set utf8mb4;
use twiten;

create table token(
	user_id bigint primary key,
	token varchar(255) character set ascii not null,
	token_secret varchar(255) character set ascii not null
);

create table viewlogin(
	user_id bigint primary key,
	logintoken varchar(88) character set ascii not null,
	foreign key (user_id) references token(user_id) on delete cascade
);

create table pid(
	pid int primary key,
	cpu int not null
)
engine=memory;

create table crawlprocess(
	user_id bigint primary key,
	pid int not null,
	rest_needed tinyint not null default 0,
	key (rest_needed)/*,
	foreign key (user_id) references token(user_id) on delete cascade,
	foreign key (pid) references pid(pid) on delete cascade
*/)
engine=memory;

create table tweetlock(
	tweet_id bigint primary key,
	pid int not null/*,
	foreign key (pid) references pid(pid) on delete cascade*/
)
engine=memory;

);
create table friend(
	user_id bigint not null,
	friend_id bigint not null,
	unique (user_id, friend_id).
	foreign key (user_id) references token(user_id) on delete cascade
);
	
create table block(
	user_id bigint not null,
	target_id bigint not null,
	unique (user_id, target_id),
	foreign key (user_id) references token(user_id) on delete cascade
);

create table user(
	user_id bigint primary key,
	name varchar(20) not null,
	screen_name varchar(20) character set ascii not null,
	isprotected bool not null,
	profile_image_url text character set ascii,
	updated_at bigint,
	location tinytext,
	description text
);
	create index screen_name_index on user(screen_name);
	create index updated_at_index on user(updated_at);
	
create table tweet(
	tweet_id bigint primary key,
	user_id bigint not null,
	created_at bigint not null,
	text text,
	retweet_id bigint,
	retweet_count int not null,
	favorite_count int not null,
	foreign key (user_id) references user(user_id),
	foreign key (retweet_id) references tweet(tweet_id) on delete cascade
);

create table media(
	media_id bigint primary key,
	source_tweet_id bigint,
	type varchar(15) character set ascii not null default 'photo',
	media_url text character set ascii not null,
	dcthash bigint not null,
	downloaded_at bigint,
	foreign key (source_tweet_id) references tweet(tweet_id) on delete set null
);
	create index dcthash_downloaded_at_index on media(dcthash, downloaded_at);
	create index downloaded_at_index on media(downloaded_at);

create table tweet_media(
	tweet_id bigint not null,
	media_id bigint not null,
	foreign key (tweet_id) references tweet(tweet_id) on delete cascade,
	foreign key (media_id) references media(media_id) on delete cascade,
	unique (tweet_id, media_id)
);

create table dcthashpair(
	hash_pri bigint not null,
	hash_sub bigint not null,
	dcthash_distance tinyint not null,
	unique (hash_pri, hash_sub),
	foreign key (hash_pri) references media(dcthash) on delete cascade,
	foreign key (hash_sub) references media(dcthash) on delete cascade
);

/*
create table pakurier(
	user_id bigint primary key
	foreign key (user_id) references user(user_id) on delete cascade
);
*/

create user token, crawl, hash, view, bot;

grant select, insert, update on twiten.token to token;
grant select, insert, update on twiten.user to token;
grant select, insert, update on twiten.viewlogin to token;

grant select, delete on twiten.token to crawl;
grant select, insert, update, delete, drop on twiten.crawlprocess to crawl;
grant select, insert, delete, drop on twiten.pid to crawl;
grant select, insert, delete, drop on twiten.tweetlock to crawl;
grant select, insert, delete on twiten.friend to crawl;
grant select, insert, delete on twiten.block to crawl;
grant select, insert, update on twiten.user to crawl;
grant select, insert, update, delete on twiten.tweet to crawl;
grant select, insert, update on twiten.media to crawl;
grant select, insert, update on twiten.tweet_media to crawl;

grant select on twiten.user to view;
grant select, delete on twiten.viewlogin to view;
grant select on twiten.friend to view;
grant select on twiten.block to view;
grant select on twiten.tweet to view;
grant select on twiten.media to view;
grant select on twiten.tweet_media to view;
grant select on twiten.dcthashpair to view;

grant select on twiten.media to hash;
grant insert on twiten.dcthashpair to hash;

grant select, delete on tweet to tool;
grant select, delete on user to tool;
grant select, insert, delete on tweet_media to tool;
grant select, delete on media to tool;
grant select on token to tool;
/*
grant select on user to bot;
grant select on tweet to bot;
grant select on tweet_media to bot;
grant select on media to bot;
grant select on dcthashpair to bot;
grant select, insert, drop on pakurier to bot;
grant select on twiten.block to bot;
*/